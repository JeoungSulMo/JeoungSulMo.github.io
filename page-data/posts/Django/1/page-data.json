{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Django/1","result":{"data":{"markdownRemark":{"id":"4d817edf-cd21-56a4-b7f0-baae6d0c619a","html":"<p>Django version === 3.1로 작성되었습니다.</p>\n<h3 id=\"sql-query문-으로-변환\" style=\"position:relative;\"><a href=\"#sql-query%EB%AC%B8-%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98\" aria-label=\"sql query문 으로 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sql query문 으로 변환</h3>\n<p><code class=\"language-text\">python manage.py sqlmigrate polls 0001</code></p>\n<p>python manage.py sqlmigrate [ app이름 ] [ migrate 번호 ]</p>\n<p>아래와 같은 장고 모델을</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Question</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    question_text <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    pub_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span><span class=\"token string\">'date published'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Choice</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    question <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>Question<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span>\n    choice_text <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    votes <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>아래와같이 sql문으로 변형된 모습을 보여줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">BEGIN</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--</span>\n<span class=\"token comment\">-- Create model Question</span>\n<span class=\"token comment\">--</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"polls_question\"</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"id\"</span> <span class=\"token keyword\">serial</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"question_text\"</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"pub_date\"</span> <span class=\"token keyword\">timestamp</span> <span class=\"token keyword\">with</span> <span class=\"token keyword\">time</span> zone <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--</span>\n<span class=\"token comment\">-- Create model Choice</span>\n<span class=\"token comment\">--</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"polls_choice\"</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"id\"</span> <span class=\"token keyword\">serial</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"choice_text\"</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"votes\"</span> <span class=\"token keyword\">integer</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"question_id\"</span> <span class=\"token keyword\">integer</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"polls_choice\"</span>\n    <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> <span class=\"token string\">\"polls_choice_question_id_c5b4b260_fk_polls_question_id\"</span>\n    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"question_id\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">REFERENCES</span> <span class=\"token string\">\"polls_question\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n    DEFERRABLE INITIALLY DEFERRED<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> <span class=\"token string\">\"polls_choice_question_id_c5b4b260\"</span> <span class=\"token keyword\">ON</span> <span class=\"token string\">\"polls_choice\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"question_id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">COMMIT</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"django-orm-making-query\" style=\"position:relative;\"><a href=\"#django-orm-making-query\" aria-label=\"django orm making query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Django ORM (making query)</h2>\n<p>터미널에서 python shell을 열어줍니다.</p>\n<p><code class=\"language-text\">python manage.py shell</code></p>\n<h3 id=\"장고에서-db에-접근하는-방법문서에있는-기본적인-내용\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EA%B3%A0%EC%97%90%EC%84%9C-db%EC%97%90-%EC%A0%91%EA%B7%BC%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95%EB%AC%B8%EC%84%9C%EC%97%90%EC%9E%88%EB%8A%94-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EB%82%B4%EC%9A%A9\" aria-label=\"장고에서 db에 접근하는 방법문서에있는 기본적인 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장고에서 db에 접근하는 방법(문서에있는 기본적인 내용)</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 모델 임포트</span>\n<span class=\"token keyword\">from</span> polls<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Choice<span class=\"token punctuation\">,</span> Question\n\n<span class=\"token comment\"># 시간정보를 가져오기위해 timezone 임포트</span>\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> timezone\nq <span class=\"token operator\">=</span> Question<span class=\"token punctuation\">(</span>question_text<span class=\"token operator\">=</span><span class=\"token string\">\"What's new?\"</span><span class=\"token punctuation\">,</span> pub_date<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nq<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Now it has an ID.</span>\nq<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span>\n<span class=\"token comment\"># 1</span>\n\n<span class=\"token comment\"># 해당 데이터에대한 객체적 접근이 가능하다</span>\n\nq<span class=\"token punctuation\">.</span>question_text\n<span class=\"token comment\"># \"What's new?\"</span>\n\nq<span class=\"token punctuation\">.</span>pub_date\n<span class=\"token comment\"># datetime.datetime(2012, 2, 26, 13, 0, 0, 775217, tzinfo=&lt;UTC>)</span>\n\n<span class=\"token comment\"># 데이터를 변경하고 save()함수를 통해 db의 내용을 변환도 가능하다.</span>\nq<span class=\"token punctuation\">.</span>question_text <span class=\"token operator\">=</span> <span class=\"token string\">\"What's up?\"</span>\nq<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># objects.all() displays all the questions in the database.</span>\nQuestion<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># &lt;QuerySet [&lt;Question: Question object (1)>]></span></code></pre></div>\n<p>추가적인 <a href=\"https://docs.djangoproject.com/en/3.1/topics/db/queries/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">자세한 정보</a>는 앞으로 사용하면서 더 추가하겠습니다.</p>\n<h3 id=\"model에대한-객체정보를-쉽게-보기위한-방법\" style=\"position:relative;\"><a href=\"#model%EC%97%90%EB%8C%80%ED%95%9C-%EA%B0%9D%EC%B2%B4%EC%A0%95%EB%B3%B4%EB%A5%BC-%EC%89%BD%EA%B2%8C-%EB%B3%B4%EA%B8%B0%EC%9C%84%ED%95%9C-%EB%B0%A9%EB%B2%95\" aria-label=\"model에대한 객체정보를 쉽게 보기위한 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>model에대한 객체정보를 쉽게 보기위한 방법</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Question</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    question_text <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    pub_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span><span class=\"token string\">'date published'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># __str__ 함수는 python class에 기본 제공 문법으로 클래스로</span>\n    <span class=\"token comment\"># 생성된 인스턴스 별로 이름을 부여한다. 이는 장고에서 admin page와</span>\n    <span class=\"token comment\"># 여러 방면에서 객체에대한 구분을 쉽게 함으로 설정하면 협입시 좋을듯 하다.</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>question_text</code></pre></div>\n<p>설정시 차이점</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># __str__ 작성 전</span>\nQuestion<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># &lt;QuerySet [&lt;Question: Question object (1)>]></span>\n\n<span class=\"token comment\"># __str__ 작성 후</span>\nQuestion<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># &lt;QuerySet [&lt;Question: What's new?>]></span></code></pre></div>\n<h3 id=\"추가\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80\" aria-label=\"추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가</h3>\n<h4 id=\"id로-data가져오기\" style=\"position:relative;\"><a href=\"#id%EB%A1%9C-data%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"id로 data가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>id로 data가져오기</h4>\n<p><code class=\"language-text\">Question.objects.get(id=1)</code></p>\n<h4 id=\"pk로-data가져오기\" style=\"position:relative;\"><a href=\"#pk%EB%A1%9C-data%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"pk로 data가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pk로 data가져오기</h4>\n<p><code class=\"language-text\">Question.objects.get(pk=1)</code></p>\n<p>위와 같이 id 또는 pk를 통해 데이터를 가져올수 있는데 차이가 궁굼해서 잠시 찾아봤습니다.</p>\n<p>큰차이는 없으나 의도에 맞는 데이터를 명확히 가져오기위해선 pk사용을 추천한다고 했으며 팀프로젝트시 이를 통일해주는게 좋다고 한다.\nid와 pk중 id로의 호출이 속도가 더 빠르며 id는 객체 생성시 자동으로 장고에서 생성시켜주는 고유번호이다.</p>\n<p>의도적으로 사용자가 table에 고유번호를 입력하고 싶을시 필드에 <code class=\"language-text\">primary key=true</code>로 설정이 가능하고 이는 <code class=\"language-text\">null=False</code>, <code class=\"language-text\">unique=Treu</code>가 설정됩니다.</p>\n<h4 id=\"외래키로-연결된-값-생성-하기\" style=\"position:relative;\"><a href=\"#%EC%99%B8%EB%9E%98%ED%82%A4%EB%A1%9C-%EC%97%B0%EA%B2%B0%EB%90%9C-%EA%B0%92-%EC%83%9D%EC%84%B1-%ED%95%98%EA%B8%B0\" aria-label=\"외래키로 연결된 값 생성 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외래키로 연결된 값 생성 하기</h4>\n<p>장고 model에서 foreignkey를 사용하여 테이블을 연결하게되면 연결된 Question객체에는 choice_set이라는 메소드가 생성되는데 이를 통해 연결된 데이터를 생성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Question에있는 첫번째 인스턴스 가져오기</span>\nq <span class=\"token operator\">=</span> Queation<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># choice는 외래키로 Question과 연결되어있어 choice_set이라는 method를 가져온다.</span>\n<span class=\"token comment\"># choice_set() 이라는 메소드는 Choice객체를 반환하며 내부에 여러기능이 있는데 이는 따로 정리하겠습니다.</span>\nq<span class=\"token punctuation\">.</span>choice_set<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>choice_text<span class=\"token operator\">=</span><span class=\"token string\">'Not much'</span><span class=\"token punctuation\">,</span> votes<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"filter\" style=\"position:relative;\"><a href=\"#filter\" aria-label=\"filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>filter</h3>\n<h3 id=\"foreinkey\" style=\"position:relative;\"><a href=\"#foreinkey\" aria-label=\"foreinkey permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Foreinkey</h3>\n<h3 id=\"manytomany\" style=\"position:relative;\"><a href=\"#manytomany\" aria-label=\"manytomany permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ManyToMany</h3>\n<h3 id=\"onetoone\" style=\"position:relative;\"><a href=\"#onetoone\" aria-label=\"onetoone permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OneToOne</h3>\n<h3 id=\"django-template\" style=\"position:relative;\"><a href=\"#django-template\" aria-label=\"django template permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Django Template</h3>\n<h2 id=\"view\" style=\"position:relative;\"><a href=\"#view\" aria-label=\"view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>View</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>template <span class=\"token keyword\">import</span> loader\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    latest_question_list <span class=\"token operator\">=</span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'-pub_date'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span>get_template<span class=\"token punctuation\">(</span><span class=\"token string\">'polls/index.html'</span><span class=\"token punctuation\">)</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'latest_question_list'</span><span class=\"token punctuation\">:</span> latest_question_list<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 아래 두 코드는 같은 의미를 가지며 내부적으로 커스텀이 필요할지도? 모를것같아 기록해 둡니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    latest_question_list <span class=\"token operator\">=</span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'-pub_date'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'latest_question_list'</span><span class=\"token punctuation\">:</span> latest_question_list<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'polls/index.html'</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span></code></pre></div>\n<p>파일구조를</p>\n<ul>\n<li>\n<p>app</p>\n<ul>\n<li>templates</li>\n<li>\n<p>app</p>\n<ul>\n<li>index.html</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>이와 같이 하라는 공식문서의 추천이 있는데 이는 장고에서 템플릿 로더가 templates폴더 내에서 html을 찾는 방식 때문이고 우리가 참조할때 app/index.html과 같이 가독성있게 참조하기 위함이다.</p>\n<p>출처</p>\n<ul>\n<li>django 공식문서</li>\n<li><a href=\"https://velog.io/@wltjs10645/Django-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B4%80%EA%B3%84\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PK .vs ID</a></li>\n</ul>","fields":{"slug":"/posts/Django/1","tagSlugs":["/tag/django/","/tag/orm/"]},"frontmatter":{"date":"2020-11-11T00:00:00","description":"졸업작품에 drf를 사용하게 될것같아 django orm과 추가적으로 조금씩 정리중입니다.","tags":["Django","orm"],"title":"django orm 정리 하기","socialImage":{"publicURL":"/static/624cc4a835e68430a8beec01cef8ac6c/photo.jpg"}}}},"pageContext":{"slug":"/posts/Django/1"}},"staticQueryHashes":["251939775","401334301","825871152"]}