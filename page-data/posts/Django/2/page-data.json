{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Django/2","result":{"data":{"markdownRemark":{"id":"94a8cd5c-0801-503f-9653-faf02d24e5c9","html":"<h4 id=\"궁굼했던거\" style=\"position:relative;\"><a href=\"#%EA%B6%81%EA%B5%BC%ED%96%88%EB%8D%98%EA%B1%B0\" aria-label=\"궁굼했던거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>궁굼했던거</h4>\n<ul>\n<li>django에서 JWT의 세부 설정 방식</li>\n<li><code class=\"language-text\">JWT_EXPIRATION_DELTA</code>와 <code class=\"language-text\">JWT_REFRESH_EXPIRATION_DELTA</code>의 차이</li>\n</ul>\n<p>djangorestframework-jwt : jwt를 python 프레임워크인 django에서 사용하기위해 돕는 라이브러리입니다.</p>\n<p>PyJWT : 파이썬에서 JWT를 다루기위한 라이브러리로 djangorestframewokr-jwt를 사용하기위해 필요하며 세부 설정과같은 부분에서 많은 정보를 가지고 있음으로 같이 참고하면 좋을듯 합니다.</p>\n<p><a href=\"https://jpadilla.github.io/django-rest-framework-jwt/#additional-settings\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">djangorestframework-jwt</a>의 공식문서에 있는 세팅예제이며 settings.py에서 작성하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">JWT_AUTH <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"JWT_ENCODE_HANDLER\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rest_framework_jwt.utils.jwt_encode_handler\"</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token string\">\"JWT_DECODE_HANDLER\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rest_framework_jwt.utils.jwt_decode_handler\"</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token string\">\"JWT_PAYLOAD_HANDLER\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rest_framework_jwt.utils.jwt_payload_handler\"</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token string\">\"JWT_PAYLOAD_GET_USER_ID_HANDLER\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rest_framework_jwt.utils.jwt_get_user_id_from_payload_handler\"</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token string\">\"JWT_RESPONSE_PAYLOAD_HANDLER\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rest_framework_jwt.utils.jwt_response_payload_handler\"</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token string\">\"JWT_SECRET_KEY\"</span><span class=\"token punctuation\">:</span> settings<span class=\"token punctuation\">.</span>SECRET_KEY<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_GET_USER_SECRET_KEY\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_PUBLIC_KEY\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_PRIVATE_KEY\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_ALGORITHM\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"HS256\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_VERIFY\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_VERIFY_EXPIRATION\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_LEEWAY\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_EXPIRATION_DELTA\"</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_AUDIENCE\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_ISSUER\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token string\">\"JWT_ALLOW_REFRESH\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_REFRESH_EXPIRATION_DELTA\"</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>days <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token string\">\"JWT_AUTH_HEADER_PREFIX\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"JWT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JWT_AUTH_COOKIE\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>jwt 설정 사항들을 확인해보던 중 두가지 설정의 차이가 궁굼해져 확인해 보았습니다.</p>\n<ul>\n<li>JWT<em>REFRESH</em>EXPIRATION_DELTA: 토큰 리프레시 주기 설정 (Access Token)</li>\n<li>JWT<em>EXPIRATION</em>DELTA : 토큰 만료 시간 값 (Refresh Token)</li>\n</ul>\n<p>토큰 탈취에대한 보안적인 부분으로 기존 jwt의 방식에서 <strong>강화된 버전</strong>이 있더군요. 기본적인 jwt 방식은 토큰을 탈취 당하면 유효한 기간동안 정보가 다 털릴 수 있습니다. 그래서 새로 고안해낸 방법이 refresh token을 추가로 사용하게 되는 방식입니다.</p>\n<p>Access token(이하 at)과 refresh token(이하 rt)을 사용한 방식의 메커니즘은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 첫 로그인시 at와 rt를 모두 발급 받습니다.\n2. 클라이언트는 at와 rt를 모두 가지고 at를 사용합니다.\n3. at를 사용하던 도중 만료가 된 토큰이면 rt를 통해 at를 새로 발급 받습니다.\n4. rt의 기간 마저 만료되면 로그인을 새로 시도해야합니다.</code></pre></div>\n<ul>\n<li>refresh token과 access token은 같은 구조의 jwt이다.</li>\n<li>로그인을 자주하지 않으면서 토큰의 만료기간을 줄이기 위한 방법이다.</li>\n<li>\n<p>장점</p>\n<ul>\n<li>보안이 더 강화된다.</li>\n</ul>\n</li>\n<li>\n<p>단점</p>\n<ul>\n<li>기존 at만 있을때보다 구현이 복잡해진다</li>\n<li>추가적인 요청이 더 많이 발생한다. 만료가 되었을때를 백엔드에서 판단해야하기 때문에 at가 만료되면 다시 rt를 통한 at 생성절차를 거쳐야 하기때문이다.</li>\n<li>프론트에서 만료 여부라도 판단하여 한번이라도 요청을 줄이는 방식을 사용하면 좋을듯 하다.(아직 안해봄..)</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://tansfil.tistory.com/59\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">참고한 블로그</a></p>","fields":{"slug":"/posts/Django/2","tagSlugs":["/tag/django/","/tag/jwt/","/tag/web/","/tag/orm/"]},"frontmatter":{"date":"2021-02-07T00:00:00","description":"djangorestframework-jwt를 사용하면서 인증 방식에대한 추가적인 정리입니다. 기존 access token만 사용하는 방식과 refresh token을 추가적으로 사용했을때의 방식이 있어 기록합니다.","tags":["Django","jwt","web","orm"],"title":"access token과 refresh token (jwt 활용)","socialImage":{"publicURL":"/static/624cc4a835e68430a8beec01cef8ac6c/photo.jpg"}}}},"pageContext":{"slug":"/posts/Django/2"}},"staticQueryHashes":["251939775","401334301","825871152"]}